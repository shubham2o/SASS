/*$primary1:#000000;
$primary2:#ffffff;
$primary3:#bbbbbb;
$text-align:center;
body {
    background-color: $primary1;
    color: $primary2;
    text-align: $text-align;
}

.div1 h1{
    color: $primary3;
}
*/
//===== First Saas Example =====//
$myfontfamily:Helvetica, sans-serif;
$myfontsize:18px;
$mycolor:red;
$mywidth:150px;

.body1 {
    font-family: $myfontfamily;
    font-size: $myfontsize;
    color: $mycolor;
}

#container {
    width: $mywidth;
}


//===== Sass Variable Scope =====//
$color1:red;

.one {
    $color1:green;
    color:$color1;
}

.two {
    color: $color1;
}


//===== !global =====//
$color2:red;

.three {
    $color2:green !global;
    color: $color2;
}

.four {
    color: $color2;
}


//===== Sass Nested Rules =====//
nav {
    ul {
        margin: 0px;
        padding: 0px;
        list-style: none;
    }
    li {
        display: inline-block;
    }
    a {
        display: block;
        padding: 6px 12px;
        text-decoration: none;
    }
}


//===== Sass Nested Properties =====//
.five {
    font: {
        family: Helvetica, sans-serif;
        size: 18px;
        weight: bold;
    }
    text: {
        align:center;
        transform: lowercase;
        overflow: hidden;
    }
}


//==== @mixin ====//
@mixin important-text {
    color: yellow;
    font-size: 25px;
    font-weight: bold;
    border: 1px solid blue;
}

.danger {
    @include important-text;
    background-color: green;
}


//===== Passing Variables to a Mixin =====//
@mixin  bordered($color,$width)  {
    border: $width solid $color;
    font-size: 20px;
}

.myarticle {
    @include bordered(2px, red);   //===== Call mixin with two values =====//
    background-color: burlywood;
}

.mynotes {
    @include bordered(4px, blue);  //===== Call mixin with two values =====//
    background-color: salmon;
}


//===== Default Values for a Mixin =====//
@mixin default ($colormy:blue, $widthmy:5px) {
    border: $widthmy solid $colormy;
}

.mytips {
    @include default($colormy:orange );
}


//===== Using a Mixin For Vendor Prefixes =====//
@mixin transform ($propertymy) {
    transform: $propertymy;
}

.mybox {
    @include transform(rotate(20deg));
}